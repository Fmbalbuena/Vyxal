%TAG !num! num # Tag for VNums
---
# Replace List\[VAny\]\((.+)\) -> (.+?),?$ with - { in: [$1], out: $2 }
# Replace VNum\((-?\d+)\) with $1

"*":
  when given two numbers:
    - { in: [3, 2], out: 9 }
    - { in: [0, 1], out: 0 }
    - { in: [2, -1], out: 0.5 }
    - { in: [5.1, 4.2], out: 937.11899215207 }
    - { in: [3, 0], out: 1 }
    - { in: [0, 0], out: 1 }
  when given a string and a number:
    - { in: ["the fitnessgram pacer test", 6], out: "the finessgram pacer test" }
    - { in: [4.2, "airpod shotty"], out: "airpd shotty" }
    - { in: ["sussy baka", 0], out: "ussy baka" }
    - { in: ["sussy baka", -1], out: "sussy bak" }
    - { in: ["vyxal", 7], out: "vyal" }
  when given two strings:
    - { in: ["abcdefabc", "abc"], out: "def" }
    - { in: ["abc", "abcdefabc"], out: "abc" }
    - { in: ["abc", "abc"], out: "" }
    - { in: ["abcdefabc", ""], out: "abcdefabc" }

"+":
  - { in: ["1", 2], out: "12" }
  - { in: ["foo", "bar"], out: "foobar" }
  - { in: [[1, "a", []], 3], out: [4, "a3", []] }
  - { in: [[[2, 5], "foo"], [[3, 4]]], out: [[5, 9], "foo0"] }
  - { in: [5.1, -45.4], out: -40.3 }
  - { in: ["foo", 3], out: "foo3" }
  - { in: [3, "foo"], out: "3foo" }
  - { in: [0.1, 0.2], out: 0.3 }

"-":
  when given two numbers:
    - { in: [420, 69], out: 351 }
    - { in: [420, -69], out: 489 }
    - { in: [6.9, 4.2], out: 2.7 }
  when given a string and a number:
    - { in: ["Hello, World", 5], out: "Hello, World-----" }
    - { in: ["Hello, World", 5.2], out: "Hello, World-----" }
    - { in: ["Hello, World", -5], out: "-----Hello, World" }
    - { in: ["Hello, World", 0], out: "Hello, World" }
    - { in: [5, "Hello, World"], out: "-----Hello, World" }
  when given two strings:
    - { in: ["Hello, World", "Hello, "], out: "World" }
    - { in: ["Hello, World", "World"], out: "Hello, " }
    - { in: ["Hello, World", "Hello, World"], out: "" }
    - { in: ["Hello, World", "Hello, World!"], out: "Hello, World" }
    - { in: ["abcbde", "b"], out: "acde" }
    - { in: ["aaa", "a"], out: "" }
    - { in: ["Hello, World", ""], out: "Hello, World" }

";":
  - { in: [1, 2, 3], out: [2, 3] }
  - { in: [1, 2, 3, 4], out: [3, 4] }
  - { in: [1, 2, 3, 4, 5], out: [4, 5] }

"<":
  With numbers:
    - { in: [1, 2], out: 1 }
    - { in: [1, 1], out: 0 }
    - { in: [2, 1], out: 0 }
    - in:
        - !num 1ı50
        - 2
      out: 1
  Should stringify:
    - { in: ["abc", 1], out: 0 }
    - { in: [20, "3"], out: 1 }
    - { in: ["ABC", "abc"], out: 1 }
  Should vectorise:
    - { in: [[1, [2, 4], -5], 3], out: [1, [1, 0], 1] }
    - { in: [[6, "foo"], [4, 20]], out: [0, 0] }

">":
  With numbers:
    - { in: [1, 2], out: 0 }
    - { in: [1, 1], out: 0 }
    - { in: [2, 1], out: 1 }
    - { in: [1.5, 2], out: 0 } # How to represent complex numbers?
  Should stringify:
    - { in: ["abc", 1], out: 1 }
    - { in: [20, "3"], out: 0 }
    - { in: ["ABC", "abc"], out: 0 }
  Should vectorise:
    - { in: [[1, [2, 4], -5], 3], out: [0, [0, 1], 0] }
    - { in: [[6, "foo"], [4, 20]], out: [1, 1] }

"A":
  when given a list:
    - { in: [[1, 391, "dqw4w9wgxcq", [0]]], out: 1 }
    - { in: [[0, 69420, []]], out: 0 }
  when given a single-character string:
    - { in: ["a"], out: 1 }
    - { in: ["E"], out: 1 }
    - { in: ["y"], out: 0 }
  when given a multi-character string:
    - { in: ["asdEy"], out: [1, 0, 0, 1, 0] }

"B":
  when given a number:
    - { in: [110], out: 6 }
    - { in: [1000], out: 8 }
    - { in: [69], out: 21 }
    - { in: [69420], out: 188 }
    - { in: [-7654], out: -94 }
    - { in: [-111], out: -7 }
  when given a string:
    - { in: ["110"], out: 6 }
    - { in: ["1000"], out: 8 }
    - { in: ["69"], out: 21 }
    - { in: ["69420"], out: 188 }
    - { in: ["-7654"], out: -94 }
    - { in: ["-111"], out: -7 }
  when given a list:
    - { in: [[1, 1, 0]], out: 6 }
    - { in: [[1, 0, 0, 0]], out: 8 }
    - { in: [[6, 9]], out: 21 }
    - { in: [[6, 9, 4, 2, 0]], out: 188 }
    - { in: [[-7, -6, -5, -4]], out: -94 }
    - { in: [[-1, -1, -1]], out: -7 }
  shouldn't do string multiplication with string lists:
    - { in: [["1", "0", ["0", "1"]]], out: 5 }

"C":
  When given lists:
    - { in: [3, [1, 3, 30, 2, 33, 4, 3, 3]], out: 3 }
    - { in: [[[1, 30, 2, 33, 4], 3]], out: 0 }
    - in:
        - [1, 30, [["h"], ["e"], ["c"]], 33, 4]
        - [["h"], ["e"], ["c"]]
      out: 1
  When given strings:
    - { in: ["lolollol lol asd", "lol"], out: 3 }
    - { in: ["lolollol lol asd", "asdf"], out: 0 }
  When given mixed types:
    - { in: [12, 1], out: 1 }
    - { in: ["ab1111ab", 1], out: 4 }
    - { in: [12341234, 2], out: 2 }
    - { in: [23432423, "3"], out: 3 }

"D":
  - { in: [1, 2, 3], stack: [3, 3, 3, 2, 1] }

"E":
  When given a number:
    - { in: [1], out: 2 }
    - { in: [2], out: 4 }
    - { in: [3], out: 8 }
    - { in: [4], out: 16 }
    - { in: [6.9], out: 119.4282229167113492456119380671925973794854 }
    - { in: [-234], out: 0 }
  When given a string:
    - { in: ["1"], out: 1 }
    - { in: ["2"], out: 2 }
    - { in: ["3243"], out: 3243 }
    - { in: ["-234"], out: -234 }
    - { in: ["0"], out: 0 }
    - { in: ["[1, 2, 3, 4, 5, 6]"], out: [1, 2, 3, 4, 5, 6] }
    - { in: ["[]"], out: [] }
    - { in: ['"lol"'], out: "lol" }

"G":
  - { in: [[1, 2, 3, 4, 5, 6, 7]], out: 7 }
  - { in: [[]], out: [] }
  - { in: [[6, 9]], out: 9 }
  - { in: [[9, 6]], out: 9 }
  - { in: [[1, 2, 3, 4, 5, 6, 7], 3], out: [3, 3, 3, 4, 5, 6, 7] }

"H":
  - { in: [69420], out: "10F2C" }
  - { in: [0], out: "0" }
  - { in: [89], out: "59" }
  - { in: ["10F2C"], out: 69420 }
  - { in: ["59"], out: 89 }

"I":
  - { in: [[1, 2, 3], [4, 5, 6]], out: [1, 4, 2, 5, 3, 6] }
  - { in: [[1, 2, 3], [4, 5, 6, 7]], out: [1, 4, 2, 5, 3, 6, 7] }
  - { in: [[1, 2, 3], [4, 5]], out: [1, 4, 2, 5, 3] }
  - { in: ["srn", "tig"], out: "string" }
  - { in: ["aaaa", ""], out: "aaaa" }
  - { in: ["aaa", [1]], out: ["a", 1, "a", "a"] }
  - { in: [123, 456], out: [1, 4, 2, 5, 3, 6] }

"J":
  - { in: [[1, 2, 3], 4], out: [1, 2, 3, 4] }
  - { in: ["abc", "def"], out: "abcdef" }
  - { in: [1, [2, 3, 4]], out: [1, 2, 3, 4] }
  - { in: [[1, 2], [3, 4]], out: [1, 2, 3, 4] }
  - { in: [123, 456], out: 123456 }
  - { in: [123, "4567"], out: "1234567" }
  - { in: ["123", 4568], out: "1234568" }

"K":
  - { in: [20], out: [1, 2, 4, 5, 10, 20] }
  - { in: [100], out: [1, 2, 4, 5, 10, 20, 25, 50, 100] }
  - { in: [1], out: [1] }
  - { in: [0], out: [] }
  - { in: [-1], out: [-1] }
  - { in: ["23423"], out: 1 }
  - { in: ["0"], out: 1 }
  - { in: ["ljlkerg23423"], out: 0 }

"L":
  - { in: [-234], out: 4 }
  - { in: [0], out: 1 }
  - { in: [1], out: 1 }
  - { in: [6782342], out: 7 }
  - { in: [123456789], out: 9 }
  - { in: ["w;ergn"], out: 6 }
  - { in: ["h"], out: 1 }
  - { in: [""], out: 0 }
  - { in: [[1, 2, 3, 4, 5, 6, 7]], out: 7 }
  - { in: [[]], out: 0 }

"M":
  When given two lists:
    - in: [[1, 2, [3, 4], 5], [1, 2, [[3, 4, 6], 5]]]
      out: [1, 2, [[[3, 4], 5, 1], 2]]
    - in: [[1, 2, 3, 4, 5, 6, 7], [[8, 9], 10, 11, 12, [13, 14]]]
      out: [[1, 2], 3, 4, 5, [6, 7]]
    - { in: [[1, 2, 3], [[4], [], [6]]], out: [[1], [], [2]] }
    - { in: [[1, 2, 3], [4, 5, 6, 7, 8, 9, 10]], out: [1, 2, 3, 1, 2, 3, 1] }
  When given two numbers:
    - { in: [45, 3], out: 2 }
    - { in: [1.125, 2], out: 0 }
    - { in: [1.125, 3], out: 0 }
    - { in: [0, 2], out: 0 }
    - { in: [-3, 1], out: 3 }

"N":
  When given a number:
    - { in: [420], out: -420 }
    - { in: [0], out: 0 }
    - { in: [-69], out: 69 }
  When given a string:
    - { in: ["a"], out: "A" }
    - { in: ["A"], out: "a" }
    - { in: ["abc"], out: "ABC" }
    - { in: ["ABC"], out: "abc" }
    - { in: ["123"], out: "123" }
    - { in: ["abC123"], out: "ABc123" }

"O":
  When given a number:
    - { in: [65], out: "A" }
    - { in: [97], out: "a" }
    - { in: [8482], out: "™" }
    - { in: [[97, 98, 99]], out: "abc" }
    - { in: [[49, 50, 51]], out: "123" }
  When given a string:
    - { in: ["A"], out: 65 }
    - { in: ["a"], out: 97 }
    - { in: ["™"], out: 8482 }
    - { in: ["abc"], out: [97, 98, 99] }
    - { in: ["123"], out: [49, 50, 51] }

"P":
  When given a number:
    - { in: [4824], out: [4, 48, 482, 4824] }
    - { in: [-342], out: [3, 34, 342] }
  When given a string:
    - { in: ["Hello"], out: ["H", "He", "Hel", "Hell", "Hello"] }
    - { in: ["abc"], out: ["a", "ab", "abc"] }
    - { in: ["123"], out: ["1", "12", "123"] }
    - { in: [""], out: [] }
  When given a list:
    - { in: [[1, 2, 3]], out: [[1], [1, 2], [1, 2, 3]] }
    - {
        in: [[1, 2, 3, 4, 5]],
        out: [[1], [1, 2], [1, 2, 3], [1, 2, 3, 4], [1, 2, 3, 4, 5]],
      }
    - { in: [[1]], out: [[1]] }

"R":
  When given two numbers:
    - { in: [1, 5], out: [1, 2, 3, 4] }
    - { in: [5, 1], out: [5, 4, 3, 2] }
    - { in: [1, 1], out: [] }
    - { in: [1, 0], out: [1] }
    - { in: [0, 1], out: [0] }
    - { in: [-5, 5], out: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4] }
  When given two strings:
    - { in: ["56.234", "\d+\.\d+"], out: 1 }
    - { in: ["Hello, World", ".+"], out: 1 }
    - { in: ["Hello, World", "Hello, world"], out: 0 }
    - { in: ["https://www.google.com", "https?://.+"], out: 1 }

"S":
  - { in: ["qzqadbA;z"], out: ";Aabdqqzz" }
  - { in: [891738], out: [1, 3, 7, 8, 8, 9] }
  - {
      in: [[8, 9, "acb", "abc", 1, 9, 2, [1, 2]]],
      out: [1, 2, 8, 9, 9, [1, 2], "abc", "acb"],
    }

"T":
  When given a number:
    - { in: [5], out: 15 }
    - { in: [0], out: 0 }
    - { in: [-5], out: -15 }
  When given a string:
    - { in: ["hello"], out: 1 }
    - { in: [""], out: 1 }
    - { in: ["Hello, World!"], out: 0 }
  When given a list:
    - { in: [[[1, 2, 3], [4, 5, 6]]], out: [[1, 4], [2, 5], [3, 6]] }
    - in: [[[1, 2, 3], [4, 5, 6], [7, 8, 9]]]
      out: [[1, 4, 7], [2, 5, 8], [3, 6, 9]]

"U":
  - { in: [[1, 2, 3, 4, 5]], stack: [[2, 4], [1, 3, 5]]}
  - { in: [[1, 2, 3, 4, 5, 6]], stack: [[2, 4, 6], [1, 3, 5]]}
  - { in: ["abcdef"], stack: ["bdf", "ace"]}
  - { in: [""], stack: ["", ""]}
  - { in: [[]], stack: [[], []]}
  - { in: [[1]], stack: [[], [1]]}
  - { in: [[1, 2]], stack: [[2], [1]]}
  - { in: [34203], stack: [40, 323]}

"V":
  When given a list:
    - { in: [[[1, 2, 3], [4, 5, 6]]], out: [[3, 2, 1], [6, 5, 4]]}
    - { in: [[[1, 2, 3], [4, 5, 6], [7, 8, 9]]], out: [[3, 2, 1], [6, 5, 4], [9, 8, 7]]}
    - { in: [[[1, 2, 3, 4, 5]]], out: [[5, 4, 3, 2, 1]]}
    - { in: [[]], out: []}
    - { in: [[1]], out: [1]}
    - { in: [[[], []]], out: [[], []]}
    - { in: [[1, 2]], out: [1, 2]}
  When given a string:
    - { in: ["hello world"], out: "Hello World"}
    - { in: ["vyxal Golfing"], out: "Vyxal Golfing"}
    - { in: ["VYXAL GOLFING"], out: "Vyxal Golfing"}
    - { in: ["h#*j"], out: "H#*J"}
    - { in: ["sk(*@lkbjthIU@#YN$UHl)"], out: "Sk(*@Lkbjthiu@#Yn$Uhl)"}
    - { in: ["Hello, World!"], out: "Hello, World!"}
    - { in: ["this i!!!!s A TESt!!!!   sentENCE"], out: "This I!!!!S A Test!!!!   Sentence"}
  When given a number:
    - { in: [123], out: -122}
    - { in: [0], out: 1}
    - { in: [-123], out: 124}

"W":
  - { in: [1, 2, 3, 4, 5], stack: [[], 5, 4, 3, 2] }
  - { in: [1, 2, 3, 4, 5, 6], stack: [[], 6, 5, 4, 3, 2] }

"Y":
  - { in: [5, 4], out: [5, 5, 5, 5]}
  - { in: [5, 0], out: []}
  - { in: [5, 1], out: [5]}
  - { in: ["abc", 3], out: ["abc", "abc", "abc"]}
  - { in: ["abc", 0], out: []}
  - { in: ["abc", 1], out: ["abc"]}
  - { in: [[1, 2, 3], 3], out: [[1, 2, 3], [1, 2, 3], [1, 2, 3]]}
  - { in: [[1, 2, 3], 0], out: []}
  - { in: [[1, 2, 3], 1], out: [[1, 2, 3]]}
  - { in: [4, 5], out: [4, 4, 4, 4, 4]}
  - { in: [4, 0], out: []}
  - { in: [3, "abc"], out: ["abc", "abc", "abc"]}
  - { in: [3, ""], out: ["", "", ""]}
  - { in: [3, [1, 2, 3]], out: [[1, 2, 3], [1, 2, 3], [1, 2, 3]]}
  - { in: [3, 1], out: [3]}
  - { in: ["abc", [1, 2, 3]], out: "abbccc"}
  - { in: ["abc", [0, 1, 0]], out: "b"}
  - { in: ["abc", [1, 0, 1]], out: "ac"}
  - { in: ["abc", [0, 0, 0]], out: ""}
  - { in: ["abc", [1, 1, 1]], out: "abc"}
  - { in: [[1, 2, 3], [1, 2, 3]], out: [[1], [2, 2], [3, 3, 3]]}
  - { in: [[1, 2, 3], [0, 0, 0]], out: [[], [], []]}

"Z":
  - { in: [[1, 2, 3], [4, 5, 6]], out: [[1, 4], [2, 5], [3, 6]]}
  - { in: [[1, 2, 3], [4, 5]], out: [[1, 4], [2, 5], [3, 0]]}
  - { in: [[1, 2], [3, 4, 5]], out: [[1, 3], [2, 4], [0, 5]]}
  - { in: [[], []], out: []}

"_":
  - { in: [1, 2, 3], stack: [2, 1] }
  - { in: [1, 2, 3, 4, 5], stack: [4, 3, 2, 1] }
  - { in: [1], stack: [] }

":":
  # todo(lyxal): make flag to give default value when popping off empty stack
  #              without having to set online = true
  # - { in: [], stack: [0] }
  - { in: [1], stack: [1, 1] }
  - { in: [1, [2, 3]], stack: [[2, 3], [2, 3], 1] }
  - { in: [1, 2, 3, 4, 5], stack: [5, 5, 4, 3, 2, 1] }

"!":
  - { in: [0], out: 1 }
  - { in: [10], out: 3628800 }
  - { in: [-5], out: 120 }
  - { in: [5.1], out: 142.4519440656788 }
  - { in: [1.654], out: 1.4898045048177275 }

"$":
  - { in: [1, 2, 3, 4, 5], stack: [4, 5] }
  - { in: [4], stack: [4, 4] }

"%":
  when given two numbers:
    - { in: [5, 2], out: 1 }
    - { in: [5, 3], out: 2 }
    - { in: [0, 1], out: 0 }
    - { in: [1, 0], out: 0 }
    - { in: [6.9, 4.2], out: 2.7 }
    - { in: [420, -69], out: -63 }
    - { in: [420, -69.69], out: -67.83 }
  when given a string and any value:
    - { in: ["Hello, %", "World"], out: "Hello, World" }
    - { in: ["Hello, %", 69], out: "Hello, 69" }
    - { in: ["Hello, %", [[1, 2, 3]]], out: "Hello, [ 1 | 2 | 3 ]" }
    - { in: ["Hello, %", 69.69], out: "Hello, 69.69" }
    - { in: ["% + % = %", [1, 2, 3]], out: "1 + 2 = 3" }

"&":
  - { in: [[1, 2, 3], [4, 5]], out: [1, 2, 3, [4, 5]] }
  - { in: [[1, 2, 3], 69], out: [1, 2, 3, 69] }
  - { in: ["abc", []], out: ["a", "b", "c", []] }

"a":
  when given a list:
    - { in: [[1, 391, "dqw4w9wgxcq", [0]]], out: 1 }
    - { in: [[0, 69420, []]], out: 1 }
  when given a single-character string:
    - { in: ["a"], out: 0 }
    - { in: ["E"], out: 1 }
    - { in: ["y"], out: 0 }
  when given a multi-character string:
    - { in: ["asdEy"], out: [0, 0, 0, 1, 0] }

"b":
  When given a number:
    - { in: [5], out: [1, 0, 1] }
    - { in: [0], out: [0] }
    - { in: [-10], out: [-1, 0, -1, 0] }
  When given a string:
    - {
        in: ["VTI"],
        out:
          [[1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1]],
      }
    - { in: [" "], out: [[1, 0, 0, 0, 0, 0]] }
  When given a list:
    - { in: [[2, 3]], out: [[1, 0], [1, 1]] }

"c":
  When given a list and a scalar:
    - { in: [[1, 2, 3, 4], 4], out: 1}
    - { in: [[1, 2, 3, 4], 5], out: 0}
    - { in: [[], 1], out: 0}
    - { in: [["1", "2", 3], 3], out: 1}
    - { in: [["1", "2", 3], 2], out: 0}
    - { in: [["1", "2", 3], "2"], out: 1}
  When given a scalar and a list:
    - { in: [4, [1, 2, 3, 4]], out: 1}
    - { in: [5, [1, 2, 3, 4]], out: 0}
    - { in: [1, []], out: 0}
    - { in: [3, ["1", "2", 3]], out: 1}
    - { in: [2, ["1", "2", 3]], out: 0}
    - { in: ["2", ["1", "2", 3]], out: 1}
  When given two scalars:
    - { in: ["abcdef", "f"], out: 1}
    - { in: ["abcdef", "g"], out: 0}
    - { in: ["abcdef", "abc"], out: 1}
    - { in: ["abcdef", "abce"], out: 0}
    - { in: ["abcdef", ""], out: 1}
    - { in: ["abcdef", "abcdefg"], out: 0}
    - { in: [234923, 4], out: 1}
    - { in: [234923, 5], out: 0}
    - { in: [234923, 234], out: 1}
    - { in: [234923, 2341], out: 0}

"d":
  - { in: [4], out: 8}
  - { in: [0], out: 0}
  - { in: [-1], out: -2}
  - { in: [1.5], out: 3}
  - { in: ["abc"], out: "abcabc"}
  - { in: [" "], out: "  "}
  - { in: ["\n"], out: "\n\n"}
  - { in: [""], out: ""}

"e":
  - {in: [[1, 2, 45, 124, 765]], out: [0, 1, 0, 1, 0]}
  - in:
    - "hello\nworld"
    out: ["hello", "world"]

"f":
  - {in: [[[1, 2, 2], 7, [8, [9]]]], out: [1, 2, 2, 7, 8, 9]}
  - {in: [[]], out: []}
  - {in: [[[], [], []]], out: []}
  - {in: [3436897], out: [3, 4, 3, 6, 8, 9, 7]}
  - {in: ["gaming"], out: ["g", "a", "m", "i", "n", "g"]}
  
"Ė":
  When given a number:
    - { in: [0], out: 1 }
    - { in: [1], out: 10 }
    - { in: [2], out: 100 }
    - { in: [-3], out: 0.001 }
